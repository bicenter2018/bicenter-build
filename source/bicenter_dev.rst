.. _bicenter_dev:

BICENTER 自由报表技术参考手册
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1	基本原理
-------------------
无论多么复杂的报表，究其根源，无外乎两个要素，一为表样，一为数据。因此，报表的制作过程，也就是制作表样、定义取数逻辑的过程。BI-Center使用Excel作为工具，来进行报表制作。

由于我们目前的报表系统，绝大多数都是从数据库获取数据，因此，一个报表的制作过程大致是这样一个流程：

确定报表查询参数 –> 制作表样 -> 编写SQL查询 –> 编写填数规则

我们查看一张报表，往往必须提出一些先决条件，如，2011年，食品部的销售利润年报表。这里，时间、部门就是我们这里所说的报表查询参数，这些参数往往由用户通过人机界面录入系统。使用BI-Center制作报表的第一步，即是确定一张报表需要哪些查询参数，并通过Excel产生合理、易用的用户录入界面布局。具体作法参见本文“报表查询条件定义”部分。

表样的制作，相对比较直观，其实就是直接通过Excel编辑出最终报表的效果即可。当然，对于一些复杂的报表，Excel无法完全做到这一点，这就需要在Excel的单元格中插入一些标注信息了，为了使BI-Center能够识别这些标注，标注的写法必须遵循一定的语法规范(详见本文“表样定义”部分)。

BI-Center支持的表样大致可分为三类：一为行列固定型，一为清单型，一为自由布局型。
行列固定型的表样制作最为直观，基本是以所见即所得的方式在Excel中进行编辑即可。

清单型报表会根据查询结果，自动在报表行的方向扩充，因此，无法以所见即所得的方式进行编辑，取而代之的做法是，编辑其重复的最小部分，辅之以必要的标注信息，以指导程序正确的填充数据(详见本文“表样定义”部分)。

自由布局型报表有的和行列固定型报表一样，没有需要根据查询结果扩充的部分。有的则混合了以上两种报表的内容。

有了表样，就可以根据表样中的数据要求，编写SQL查询语句了，BI-Center目前支持从多个数据源执行多个SQL查询（包括前置处理），然后使用多个结果集来填充报表的数据区。具体做法参见本文” SQL查询语句定义”部分。

查询出的结果集如何填充到表样中正确的单元格中去？ 这就需要我们定义填数规则，填数规则基本上也是以所见即所得的方式在Excel表样中的单元格进行适当的编辑，对需要特殊效果的地方还进行标注。单元格中使用EEL语法来指定用于填充的数据内容。详见本文“表样定义.语法规范.查询结果引用”部分。


2	数据源及报表运行环境设置
-------------------------
数据源及报表运行环境设置，由一个文件配置。该文件位于安装目录下，WEB-INF子目录下的jdbcDomain.properties

该配置文件定义了报表运行过程中所需要的所有信息，包括：
1、	数据源（必须设置）
2、	表样存放地址（必须设置）
3、	数据更新时间获取方法设置（可选设置）
4、	日志记录方案设置（可选设置）
5、	预定义维度设置（可选设置）
6、	预定义字典设置（可选设置）
7、	预定义系统变量设置（可选设置）
8、	当前用户信息获取方法设置（可选设置）
9、	维度权限设置（可选设置）
10、缓存存放地址（必须设置）
11、缓存控制项设置（必须设置）
12、统计图序列颜色设置（可选设置）
13、自定义组件插入设置（可选设置）



2.1	配置文件位置
~~~~~~~~~~~~~~~~~~~~~~~~~~~
应用程序安装目录/WEB-INF/jdbcDomain.properties

2.2	配置项的命名规则
~~~~~~~~~~~~~~~~~~~~~~~~~~~
通常，配置项的命名规则如下： 
配置项名称.配置项大类.配置项明细类=值
如： data.jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
表示 名为 data 的数据源，其 jdbc 连接信息中“驱动类名” 为: oracle.jdbc.driver.OracleDriver. 其中， data 为名称， 可在表样定义中，使用名称来引用配置项。 Jdbc 为配置项大类，表示jdbc数据源。 driverClassName 为配置项明细，表示驱动类名称，请注意，配置项明细类可能不止一层，如果多于一层，仍使用”.”将各层次分开，如：  region.hierarchy.store.type


2.3	配置数据源
~~~~~~~~~~~~~~~~~~~~~~~~~~~
修改jdbcDomain.properties文件，配置数据源，可以用两种方式配置数据源：
a)	使用Web应用服务器配置的数据源（目前只支持Weblogic），语法如下： 
数据源名称.datasource.name=Web应用服务器配置的数据源的JNDI名称
 例：fsd.datasource.name=FSD_CON
b)	自行定义jdbc连接，语法如下：
数据源名称.jdbc.driverClassName=jdbc驱动类名
数据源名称.jdbc.url=jdbc的url
数据源名称.jdbc.username=symbols=用户名
数据源名称.jdbc.password=symbols=密码
例：
symbols.jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
symbols.jdbc.url=jdbc:oracle:thin:@10.241.1.244:1528:crbdev1
symbols.jdbc.username=symbols
symbols.jdbc.password=symbols
   
可为一个应用配置多个数据源。


2.4	配置报表表样文件及表样库的位置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
修改jdbcDomain.properties文件，语法如下：
report.base.path=表样文件缺省存放目录
如果有一个或多个表样库，则使用如下语法：
表样库名称.report.lib=表样库文件 或 表样库目录

在“表样文件缺省存放目录”下的表样， 可直接使用表样文件名指定。 而在表样库中存在的表样，则通过“表样库名/表样文件名”指定。
表样库可以表样包文件 或 表样库目录的方式存在。
表样包文件的制作请参阅,相关章节。
表样库中，可以存在一个配置文件，文件名为jdbcDomain.properties. 配置项的含义及语法与全局配置文件一致。如果存在，表样库中的配置项将覆盖全局配置文件中的配置项。需要注意的是，以下配置项只能在全局配置项中定义：
	日志级别
	缓存位置
	缓存控制
	当前用户信息获取方法

 
2.5	配置报表缓存位置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cache.report.path=缓存目录
例::
	cache.report.path=D:/FMT/rptdef5/tmp  访问报表后会自动D:/FMT/rptdef5/tmp文件夹下缓存报表信息。


2.6	配置报表缓存控制项
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Cache.report.disk.max.live.time=缓存时长

时长表示方法： 
xH ：x小时； xD ： x天

2.7	配置系统参数
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
系统参数是全局可用的变量，可在仍何需要的地方通过${var.变量名}引用。其配置语法如下：
变量名.var.value=变量值


2.8	配置字典
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
字典定义了一个键值与其它值的对应关系（最常见的是将编码（或ID）与名称对应起来）， 使用时可通过键值，获得相应的其它值。字典的配置语法如下：
字典名称.dictionary.datasource=数据源（第一步配置的数据源名称）
字典名称.dictionary.store.type=table（存储于数据表中，目前仅支持此配置）
#flat table xml sql
字典名称.dictionary.table.name= sql 查询语句
字典名称.dictionary.key.field=字段名（键值所在字段名）
字典名称.dictionary.name.field=字段名（名称所在字段名）
字典名称.dictionary.caption.pattern={id} - {name}（显示名称的模式）
字典名称.cache.durance=1H（缓存时长）

配置好的字典，在报表定义中有两种用途：
其一，可通过语法： ${dic.字典名称[id][字段名]} 获取其值。其中，配置项中“键值所在字段”的值对应语法中id的值，如果配置项中指定了“名称所在字段名”，当要取该字段的值时，可省略[字段名]部分，写成 ${dic.字典名称[id]} 即可。
其二，在查询条件中，作为选择控件的数据源， 以dictionary（字典名称）的语法，填写在“数据范围”一栏。当作为选择控件时，缺省情况下，以 “名称所在字段”作为控件的显示值， 以“键值所在字段”的值作为实际值。但有些情况下，可能显示值显示更多信息，这是就需要使用“显示名称的模式”配置项来定义，该项使用{id} 、{name作为占位符，{id}表示“键值所在字段”的值，{name}表示“名称所在字段”的值，显示时， 控件将用实际值替代这两个占位符。


2.9	配置维度	
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
参见“报表中的数据权限”部分。

2.10 配置当前数据更新时间
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
当前数据更新时间来自业务数据库，需要通过配置告诉程序如何提取,语法如下：
rundate.datasource=数据源（第一步配置的数据源名称）
rundate.sql=SQL查询语句（要求仅返回一列）
rundate.format=日期字符串的格式

日期字符串格式规范y表示年，M（大写）表示月，d表示日，示例如下： 
yyyyMMdd ： 20110101   2011年1月1日
yyyy-MM-dd :   2011-01-01 2011年1月1日

2.11 配置当前用户信息获取方法
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
需定义如下两个配置项：
userid.pass.method ： 可为 request、session， request 指从http请求参数中取，session表示从http session变量中取。
userid.pass.key： 指用户ID的 http请求参数名或session属性名
username.pass.key: 指用户显示名的 http请求参数名或session属性名，可省略
例：用户通过url: http://localhost/bicenterfin/report?type=xxx&uid=liuxjg
配置如下：
userid.pass.method=request
userid.pass.key=uid

则该配置指示程序从http request中取参数uid的值“liuxjg“作为用户ID。

	有的情况下，应用程序使用session中的一个javaBean来存储用户信息，这就需要配置javaBean的信息：
    user.session.cookie.name=cookie名称
user.session.bean=java类全名
user.session.bean.id.method=获取用户Id的方法名， 如：getId()
user.session.bean.name.method=获取用户显示名称的方法名， 如：getName()

 
2.12 配置日志级别
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
日志级别用于控制程序运行时输出到控制台的信息。

日志级别由大到小如下排列：off(不输出日志信息), error（输出错误信息）, warn（输出警告及错误信息）, info(输出通知、警告及错误信息), debug(输出调试、通知、警告及错误信息), all(输出所有信息) 

配置日志级别须修改jdbcDomain.properties文件，语法如下：
log.verbose=日志级别

如果不配置该项，缺省为日志级别为：info


2.13 配置使用LOG4J记录日志
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
添加如下配置项，同时将 log4j.properties 配置文件放在jdbcDomain.properties的同一目录下。
	log.adaptor= com.dc.bicenter.Log4JAdaptor
	
3  报表定义文件及表样库的基本约定
--------------------------------------
3.1	表样文件
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
报表定义文件为二进制Excel文件，以xls为后缀名。文件名不应包含中文字符。

报表文件至少需包含如下标签页：

1、基本要求：必填，用于定义报表的基本属性，按模板填写
2、查询条件：必填，用于定义报表的查询参数及录入界面布局，按模板填写
3、define：   必填，用于定义表样及填数规则，无模板
4、查询定义：必填，用于定义SQL查询，按模板填写
5、打印设置：选填，用于定义打印（导出PDF）的缺省字体、纸张类型等，按模板填写
6、存储定义：选填，对于有补录需求的报表，定义如何在数据库中存储补录数据，按模板填写
7、其它设置：选填，

3.2	表样库
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
可以将同一目录下的表样文件组织成表样库，表样库可以有两种型态：预编译的表样包文件，表样目录。详见“报表运行环境设置”相关章节。

3.2.1	表样库中的配置文件
....................................
每个表样库下面，允许包含自己的配置文件： jdbcDomain.properties.

3.3	基本语法
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
EL（表达式语言）语法、JSON语法都是程序开发人员熟知的语法， Bicenter借用它们来定义报表的模板。

3.3.1	EEL语法
....................................
EL前面多加了一个E， 表示扩展（extended），我们对EL语法稍作扩展，用以表达对数据的引用及运算。和EL一样，EEL 语法最大的特点就是使用上很方便。EEL主要的语法结构：
例：${ds.user.gender}
EEL以${为起始、以}为结尾的。上述EEL范例的意思是：从名为“user”的查询结果集中，取“gender”字段的值。
EL 提供 . 和 [ ] 两种运算符来导航数据。下列两者所代表的意思是一样的：
${ds.user.gender}等于${ds.user[gender]}
不过，当要存取的属性名称中包含一些特殊字符，如. 或 – 等并非字母或数字的符号，就一定要使用 [ ]，例如：${user.My-Name }是不正确的方式，应当改为：${user[My-Name] }

在Bicenter中， EEL语法用于：
定义数据引用
定义变量引用
定义字典引用
定义混合运算

3.3.1.1	定义变量引用
'''''''''''''''''''''''''''''''''''
${var.变量名} 或 ${var[变量名]}

变量可在“查询条件”标签中定义，通常由用户录入；也可在配置文件中以系统变量的方式定义。

3.3.1.2	Session参数引用
'''''''''''''''''''''''''''''''''''
${session[参数名]}

3.3.1.3	url请求参数引用
'''''''''''''''''''''''''''''''''''
${request[参数名]}

3.3.1.4	定义其它报表单元格的引用
'''''''''''''''''''''''''''''''''''
${ref.引用名称.单元格坐标} 或 ${ref.引用名称[单元格坐标]}
单元格坐标使用Excel通用写法，如：A1、B2、等

3.3.1.5	定义对查询结果集的数据引用
'''''''''''''''''''''''''''''''''''

3.3.1.5.1	依赖查询结果集迭代上下文的数据引用
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
${ds.查询名称[字段名]} 或 ${ds.查询名称.字段名}
引用查询某字段的值

3.3.1.5.2	依赖查询结果集迭代上下文的聚集运算引用
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
${aggrds.查询名称.聚合函数名称（字段名）}
引用某查询结果集的聚合值.

${group.查询名称.聚合函数名称（字段名）}
引用某查询的客户端分组聚合值， 客户端分组在“查询定义”标签页中定义，参见。。。。， 

bicenter支持的分组聚合函数包括::

函数名	用途	上下文敏感
Sum(字段名）	求和	是
Count（字段名）	计数	是
Avg（字段名）	平均	是
Max（字段名）	求最大值	是
Min（字段名）	求最小值	是


3.3.1.5.3	上下文无关的数据引用
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
${ds.查询名称[字段名1=特定值][字段名2]}
引用某查询中，“字段1”等于特定值的“字段2”的值

3.3.1.6	定义字典引用
'''''''''''''''''''''''''''''''''''
${dic.字典名[键值][字段名]} 
引用某字典 某键值对应的 名为 “字段名”的值， 若 取配置的名称值，则可简写为：或 ${dic.字典名[键值]}

3.3.1.7	EEL语法支持的运算符及其运算优先级
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
EEL语法支持如下运算符，运算符的优先级与Excel定义的规则一致。
 .. image :: _static/images/bicenter_dev/3.1.1.7.1.png

比较运算符
可以使用下列运算符比较两个值。当用运算符比较两个值时，结果为逻辑值：TRUE 或 FALSE。
 .. image :: _static/images/bicenter_dev/3.1.1.7.2.png
 
 逻辑运算符
可以使用如下逻辑运算符。
 .. image :: _static/images/bicenter_dev/3.1.1.7.3.png

文本连接运算符
可以使用与号 (&) 联接或连接一个或多个文本字符串，以生成一段文本。
 .. image :: _static/images/bicenter_dev/3.1.1.7.4.png
 
3.3.1.8	定义函数运算
'''''''''''''''''''''''''''''''''''
${ 函数名（参数1，参数2 …）}  目前， 系统预定义的函数如下：

3.3.1.9	定义混合运算
'''''''''''''''''''''''''''''''''''
例：
${ (ds.data1[id=ds.data2[id=data1keyField][value]] – ds.data2[value2] ) / var.yearDays }

上式引用了两个查询和一个变量，并对其进行四则运算，其含义解释如下： 
ds.data2[id=data1keyField] 表示：从查询 data2 中取字段 data1keyField 的值， 为方便叙述，我们将其命名为x。 
ds.data1[id=ds.data2[id=data1keyField][value]] 表示：从查询data1 中，取id字段等于 x 时，字段 value 的值，为方便叙述，我们将其命名为y。
ds.data2[value2] 表示：从查询 data2 中取字段 value2的值， 为方便叙述，我们将其命名为z。

最后求 （y – z） / 变量yearDays  的值

除四则运算外，Bicenter还支持预定义的函数运算，预定义函数详见

3.3.2	JSON
....................................
JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式，易于阅读和编写，同时也易于机器解析和生成。它基于ECMA262语言规范（1999-12第三版）中JavaScript编程语言的一个子集。 
JSON的对象是一个以“{”、“}”号括起来，以“，”分格的的“名称：值”对的集合。如：
{
		Name:“刘晓军”,
     Age:   25,
     isMale:  true,
     Son:   {…}
}
上述文本表示一个对象，该对象有name、age、isMale、Son四个域，各个域的值可以为字符串（以双引号或单引号包围，如上例中的“刘晓军”）、数值（上例中25）、布尔值（上例中true）、对象（上例中{…}）
JSON的数组表示为以“[”、“]” 号括起来,以“，”分格的对象序列。如：
[
		“曹勇”,
	    “刘晓军”，
      “李优良”
]
上例表达了一个字符串数组

4	报表查询条件定义
----------------------------
报表参数定义在表样文件中使用专门的一张标签页，该标签页名称必须为“查询条件”。

4.1	查询参数定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
在“查询条件”标签页中，填写下表，即可完成查询参数的定义。
 .. image :: _static/images/bicenter_dev/4.1.1.png
 
4.1.1	参数基本信息
....................................

4.1.1.1	条件名称
'''''''''''''''''''''''''''''''''''
必填，且不能重复，在查询参数界面布局时，通过该名称对查询条件的录入空间进行进行引用。

4.1.1.2	变量名
'''''''''''''''''''''''''''''''''''
必填，用户录入的参数，可通过“$变量名”方式在报表上下文中引用。

注意，变量名不能为下列名称（大小写不敏感）：
code、op、today、rundate

4.1.1.3	显示变量名
'''''''''''''''''''''''''''''''''''
按需填写。对于下拉选择框、日期等录入控件，除须定义录入的参数值本身外，还需定义该参数的显示值，如：机构代码为“1000”，显示值为“xxx总行”；传入日期参数值为“20110101”，显示日期值为“2001年1月1日”。这种情况下，使用显示变量名存储变量的显示值。同样，可在报表上下文中通过“$变量名”方式引用显示变量的值。

注意，变量名不能为下列名称（大小写不敏感）：
code、op、today、rundate

4.1.1.4	录入控件
'''''''''''''''''''''''''''''''''''
必填，必须是下列控件之一：
select : 下拉选择框
multiSelect: 多选下拉框
datepicker：  日期选择控件
calendar：   日历控件
text：       文本框控件
itext:		智能文本框控件，该控件只能录入在备选值中存在的值，并提供录入提示功能

4.1.1.5	控件属性
'''''''''''''''''''''''''''''''''''
按需填写，同css语法，目前仅支持控件宽度的定义，例： 
  width：12em 
表示控件为12个字符宽。

4.1.1.6	数据类型
'''''''''''''''''''''''''''''''''''
必填，指明传入参数的类型，下列类型之一： 
String：字符串，Number：数值，Date：日期

4.1.1.7	只读
'''''''''''''''''''''''''''''''''''
按需填写，可填写任何基于EEL语法的布尔表达式，为真则该控件为“只读”状态，例：
Var.ksswjg!="10"
表示当变量ksswjg不等于“10”时，控件为只读状态

4.1.1.8	默认值
'''''''''''''''''''''''''''''''''''
按需填写：对于日期选择控件、下拉选择框等控件，可定义其默认值。对于下拉框控件，默认值须定义为值，而非显示值。

4.1.1.8.1	日期选择控件的缺省值
""""""""""""""""""""""""""""""""""""""""
对于日期选择控件的缺省值定义，涉及到取当前时间或当前数据更新时间，可使用内置函数today（offset） 或 rundate（offset）通过EEL语法调用来定义：

${today( “[+|-] n [d|t|m|q|s|y]” )}
或
${rundate(“[+|-] n [d|t|m|q|s|y]” )}

其中， today 、rundate为内置函数，分别为当前自然时间及当前数据更新时间的值。
+表示当前时间加，-表示当前时间减。
n 为数值。
d表示天，t表示旬，m表示月，q表示季，s表示半年，y表示年。

例： ${today(“-1d”)} 表示当前时间上一天， ${today(“-1t”)}表示上一旬， $today(“-3m”)表示三个月前……

要使rundate（当前数据更新时间）有意义，需要在配置文件中进行相应配置，否则其等于系统当前时间（today一致）。参见前文“配置当前数据更新时间”部分。

4.1.1.8.2	取Http Session或Http Request上下文中的参数值
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

当报表中需要引用Http Session 或 http requset 中的字符串类型的参数值（注意：只能是字符串类型）时，可通过定义一个变量，通过定义缺省值，获取该参数，语法如下： 
session（“key”）   ：Http Session 中，名称为“key”的参数值
request（“key”）  ： Http Request中，名称为“key”的参数值

 
4.1.1.9	数据格式
''''''''''''''''''''''
4.1.1.9.1	Calendar控件的数据格式
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

按需填写。 对于日历控件，可在此栏定义格式。格式串含义如下：
YY MM dd  一个Y（11）表示两位年，两个Y表示4位年（2011）
一个M表示一位月份，两个M表示两位月份， 一个d表示一位日期，两位d表示两位日期。
示例： 
y年M月d日  11年1月1日 
yy年M月d日  2011年1月1日
yyMMdd        20110101

如果日期变量与显示变量格式不一致，按如下写法分别给出：
显示变量格式（值变量格式）

4.1.1.9.2	Datepicker 控件的数据格式
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Datepicker 控件可提供年、年半年、年季、年月旬、年月日等多种粒度的时间选择。使用哪种粒度，是通过数据格式控制的，规则如下：

yy 年
yys 年半年
yyq 年季
yyMMt 年月旬
yyMMd 年月日

4.1.1.10 取值范围
''''''''''''''''''''''

4.1.1.10.1	Select（下拉选择框）、multiSelect（多选下拉框） 、itext（智能文本框）控件的取值范围定义
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
通过取值范围的定义，可使用多种方式提供下拉选择框的备选值

4.1.1.10.1.1 显示名（值）序列
""""""""""""""""""""""""""""""""""""
以“显示值1（值1），显示值2（值2）……”方式，将备选值罗列在取值范围单元格。若显示值与值相同，则可直接以“值1，值2……”方式填写。

4.1.1.10.1.2	Select 语句
""""""""""""""""""""""""""""""""""""
可以通过一个select语句定义下拉选择框的备选项，要求select语句具备如下规范:
Select  caption, value from … where …

即：返回数据集中，每行含两列数据，其中，第一列为显示值，第二列为值，每行数据代表一个备选项。

Select语句统一在“查询定义”标签页中定义，“取值范围”单元格中，只需填写查询名称

4.1.1.10.1.3	维度
""""""""""""""""""""""""""""""""""""
预定义维度，也可作为下拉选择框的备选值，语法为：hierarchy(维度名)。 同时可在“数据格式”列限制可以选择的层次，具体写法为：
01组合字符串， 从右到左的位数对应层次由底向上层次数， 0 表示不允许选择， 1表示允许选择， 例： 100 表示仅允许选择第三层（从最底层算起）的节点。 
如果不填，则仅允许选择层次结构的最底层节点（叶节点）。

4.1.1.10.1.4	字典
""""""""""""""""""""""""""""""""""""
预定义字典，也可作为下拉选择框的备选值，语法为：dictionary(字典名)。

4.1.1.10.1.5	静态Java类方法调用
""""""""""""""""""""""""""""""""""""

可以调用一个发布在BI-Center包中的java静态类方法，来提供下拉选择框的备选项，java类需符合如下规范：
1、	必须是com.dc.包下面的类
2、	必须是静态方法
3、	方法签名必须如下：
SelectableValue[]  method(HttpServletRequest request, String param1, String param2……)

SelectableValue 是BI-Center内部定义的一个类，可直接引用，字符串参数数量不限。

使用时，将对该方法的调用语句填写到“取值范围”单元格中，其中，request参数需略去，直接传入字符串参数，这些参数可为常量，也可使用”$变量名”语法引用报表上下文的变量。

如：com.dc.BI-Center.BranchProvider.getBranches($报表粒度)
该写法调用的是 com.dc.BI-Center.BranchProvider 类中的如下方法：
Public static SelectableValue[] getBranches(HttpServletRequest request, String baobiaolidu)

4.1.1.10.2	日期控件的取值范围定义
'''''''''''''''''''''''''''''''''''
日期控件范围可以如下写法定义：
yyyyMMdd，yyyyMMdd

逗号前为起始时间，逗号后为截止时间，如：19990901,20120101 ， 表示控件只接受1999年9月1日 至 2012年1月1日 之间的日期。起止时间都可使用变量，并支持$rundate，$today 相关运算（详见“日期选择控件的缺省值”部分）。

当起始时间，截止时间成对出现时，假定起始时间的变量名为 startDay， 截止时间的变量名为 endDay， 则可按如下方式定义两个控件的取值范围，以保证截止时间 大于 等于起始时间：
起始时间：  19900101,$endDay
截止时间：  ${var.startDay}, ${rundate(“-1d”)}

上例表示，起始和截止的时间范围为1999年1月1日， 至最近数据更新时间的前一天，起始时间 一定小于或等于 截止时间。

4.1.1.10.3	时间选择控件（datepicker）依赖关系的定义
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
当用户改变报表频率时，要求时间选择控件（datepicker）做出相应的调整，如：当将报表频率由季报改为月报时， 时间选择控件应从年季模式切换为年月模式。

这种切换是通过定义控件的依赖关系实现的。具体做法是：将“数据格式”一栏填上其一例的变量名，如 {var.freq}
报表日期控件依赖于频率控件的取值，频率控件的变量名为：freq。 如果取值为: 季报（yq），则显示年季输入界面，如取值为: 月报（ym），则显示年月输入界面。

4.1.1.10.4	下拉列表控件（select）依赖关系的定义
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

除时间选择控件外，下拉列表控件之间也可定义依赖关系，如：地区输入界面中提供省分、城市两个下拉列表控件，当用户选择省分时，城市下拉列表的内容应作相应改变。
只有通过Sql查询获得取值范围的下拉列表控件才能定义依赖关系，具体做法和时间选择控件的做法一致，另外，还需多做一步，即，将“取值范围”处定义的SQL语句加以修改，增加一个查询条件，用${var.变量名}代表被依赖的下拉列表控件的取值（而非显示值）。

4.1.1.11 查询参数的用法
'''''''''''''''''''''''''''''''''''
用户录入的查询参数并不都是服务于同一目的的。有的查询参数用于唯一区别一张报表，如：报表的时间、机构等；有的用于在同一份报表上做数据转换，如度量单位；有的只是在整个报表生成过程中起临时辅助作用。

4.1.1.12	用法1：查询条件
'''''''''''''''''''''''''''''''''''
所有用作查询条件的查询参数的组合，应是能唯一标识一张报表。并且，这些参数应是能够标识一张报表的最小集合。它们的作用类似于数据库设计中的联合主键。

应避免增加冗余的查询条件。

4.1.1.13	用法2：数据转换
'''''''''''''''''''''''''''''''''''
用作数据转换的查询参数，仅用于实现数据转换，如单位转换，它们对应的报表都是同一份数据。如：某报表的数据都是以元为单位，而用户希望同时看到以万元为单位的报表。这里，无论用元为单位，还是以万元为单位，我们使用的都是以元为单位的数据，只是我们以万元为单位时，将所有数据乘上了一个转换因子（对万元而言，我们乘了0.0001）

4.1.1.13.1	转换因子的定义
""""""""""""""""""""""""""""""""
数据转换的转换因子，是通过“取值范围”列，按“显示名（转换因子）”的语法定义的。

4.1.1.14	用法3：其它
'''''''''''''''''''''''''''''''''''
无需用作“查询条件”和“数据转换”的变量，将其用法设为“其它”

4.1.1.15	用法4: 录入校验
'''''''''''''''''''''''''''''''''''
用作录入校验的时，可不填写变量名， 在“取值范围”列，填写录入有效性验证的布尔表达式，在“默认值”列填写有效性验证失败时的提示信息。

4.2	录入控件详解
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
4.2.1	文本框（text）
..........................
文本框控件用于用户直接录入文本信息，用户可自由录入任何信息，不受任何限制。可在“默认值”一栏中定义其默认值，“输入范围”、 “显示变量名”等栏无效。如果定义了默认值，查看报表时，文本框首先显示默认值；否则为空。

4.2.2	下拉选择框（select）
....................................................
下拉选择框用于用户在一个范围内选取一个值。下拉选择框的每个选项含两个值，一个为“显示值”，一个为“隐含值”，其中，“显示值”是用户在控件中看到的文本值，“隐含值”则不为用户所见，但它常常是我们在业务上使用的值（比如编码），因此，在“显示变量名”栏中填写的变量名对应于“显示值”，“变量名”栏的变量名则对应于“隐含值”。

如果“输入说明”栏中定义为“必选”，则下拉选择框中不含空白选项，否则，会包含一个表示什么都不选的空白选项。

下拉选择框同样可以定义“默认值”，默认值须为存在的选项，且必须用“隐含值”定义。

下拉选择框的“输入范围”一栏，用于定义其可用的所有选项（不必包含空白选项）。具体定义方法见上一节内容。

“数据格式”一栏对下拉选择框无意义。

4.2.3	多选下拉框（multiSelect）
....................................................
除通过“数据格式”一栏对值变量的表现形式进行控制外，其余与下拉选择框相同。
4.2.4	智能文本框（itext）
智能文本框和下拉选择框一样，用于支持用户在一个范围内选取一个值，不同的只是操作方式，下拉选择框通过下拉按钮，查看所有选项，然后选择一项；而智能文本框没有下拉按钮，也不会列出所有选项，通过键入文本，智能文本框仅将与键入文本匹配的选项列出，由用户选择。用户也可在不键入文本的情况下，按“下箭头”键，显示部分选项。

至于各栏目的填写方式及意义，则与下拉选择框完全一致。

4.2.5	日期选择（datepicker）
....................................................
日期选择控件提供多种粒度的时间选择，包括：年、年半年、年季、年月、年月旬、年月日等。

日期选择控件也有“显示值”，“隐含值”之分。日期选择控件的“隐含值”，是预定义的编码，编码规则如下表::

时间粒度	编码方式	位数	格式	说明	示例
年	yyyy	4	Y		2011
年半年	yyyy5,yyyy6	5	ys	5表示上半年，6表示下半年	20115,20116
年季	yyyy[1-4]	5	Yq	1-4表示1-4季度	20114
年月	yyyyMM	6	Ym	前4位表示年，后2位表示月，前9月数字前填零	201103
年月旬	yyyyMM[1-3]	7	Ymt	最后一位只能取1、2、3；分别表示上、中、下旬	2011032
年月日	yyyyMMdd	8	Ymd	最后两位表示日，前9日数字前填零	20110303

日期选择控件由“数据格式”栏控制其时间粒度，具体写法见上表。

日期选择控件同样支持以当前时间为基准定义的“默认值”，具体语法见上一节“日期选择控件的缺省值”部分。

日期选择控件可结合下拉选择框控件，动态的调整其粒度。具体做法如下：
1、	定义一个下拉框控件，其取值选项的值为上表中的格式一栏中的值。
2、	在日期选择控件的“数据格式”一栏中填写下拉框控件的变量名，语法为${var变量名}

日期选择控件还可通过“取值范围”一栏限制其取值范围，具体语法为：
起始时间，截止时间
其中，起始时间、截止时间可以是一个以yyyyMMdd编码的字符串；也可是一个符合“默认值”定义语法的基于当前时间的函数表达式；也可以是一个其它“日期选择控件”的变量引用（语法为：${var.变量名}）。例：
 .. image :: _static/images/bicenter_dev/4.2.5.1.png
 
4.3	界面布局
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
界面布局用于定义查询参数的录入控件在屏幕上的摆放位置，具体做法如下：
将决定放在屏幕的控件相应得参数名称填写在“界面布局”单元格下方。程序会按行平铺在此处出现的控件。未在此处定义的参数，则不会出现在屏幕上。
 .. image :: _static/images/bicenter_dev/4.3.1.png
将决定放在屏幕的控件相应得参数名称填写在“界面布局”单元格下方。程序会按行平铺在此处出现的控件。未在此处定义的参数，则不会出现在屏幕上

4.4	录入校验
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 .. image :: _static/images/bicenter_dev/4.4.1.png
 
如图： 在“条件名称”列中， 填写校验名称， 不能重名。
在“用法”列 ， 填写“录入校验”。
在“默认值”列， 填写验证失败时系统的提示信息。
在“取值范围”列， 填写按EEL语法编写的布尔表达式，用于定义录入校验规则。

5	表样定义
-----------------------
报表表样在“表样定义”（或“define”）标签页中定义。表样的定义一是靠excel本身的格式控制功能，二是靠符合特定语法规范的标注信息。

5.1	语法规范
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
5.1.1	JSON对象及数组
..........................
JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式，易于阅读和编写，同时也易于机器解析和生成。它基于ECMA262语言规范（1999-12第三版）中JavaScript编程语言的一个子集。 
JSON的对象是一个以“{”、“}”号括起来，以“，”分格的的“名称：值”对的集合。如：
{
		Name:“刘晓军”,
     Age:   25,
     isMale:  true,
     Son:   {…}
}
上述文本表示一个对象，该对象有name、age、isMale、Son四个域，各个域的值可以为字符串（以双引号或单引号包围，如上例中的“刘晓军”）、数值（上例中25）、布尔值（上例中true）、对象（上例中{…}）
JSON的数组表示为以“[”、“]” 号括起来,以“，”分格的对象序列。如：
[
		“曹勇”,
	    “刘晓军”，
      “李优良”
]
上例表达了一个字符串数组

5.1.2	标注规范
........................
所有标注都以“{”开头，“}”接尾，即，标注表示为一个JSON对象。

5.1.3	报表上下文变量
........................

报表上下文变量是指由报表引擎传入的参数，以“${var.变量名}”引用。需要注意的是，无论变量的数据类型如何，报表引擎都只能将其替换为文本串，因此，用户需自行决定是否需要加引号。如： 
select * from people where name=’${var.name}’   (${var.name}为字符串，需加’ ‘)
select * from people where age=${var.age}       (${var.age} 为数值)

5.1.4	表内引用
........................
表内引用直接使用Excel的单元格坐标，如： B3、C5 等

5.1.5	查询结果引用
........................
要将查询的结果填写到表样的指定位置，只需在相应的单元格中引用查询结果的相应值即可。目前有四种方式在一个单元格中引用查询结果。

1、${ds.查询名.字段名} 或 ${ds.查询名[字段名]}
当一个单元格只填写一个查询结果值，且该单元格以行为单位向下扩充时，使用该方式。该方式的查询名须与SQL查询定义中的查询名称一致
例:
 .. image :: _static/images/bicenter_dev/5.1.5.1.png
2、混合文本
当单元格内填写一个文本串，该文本串的一部分为查询结果值时，使用该写法。如：某报表的某个单元格内填写：你的账户余额为：${ds.query.money}

3、${ds.查询名[字段名1=值][字段名2]}
当一个单元格只填写一个查询结果，且该单元格须填写符合括号内条件的数据行时，使用该写法。
例：
shouldbe modified
 .. image :: _static/images/bicenter_dev/5.1.5.2.png
4、混合文本
场景如上述第2项，但单元格内填写的是一个包含该值的文本串。如：今年经常项目累计为 ${ ds.query[col4=100][amount] } 元

5.2	表样定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
表样定义可直接在Excel中，以所见即所得的方式编辑。
目前，系统可识别及重现Ecxell单元格中的如下信息：
1、填入单元格内的文本、数值及运算公式（目前仅支持加减乘除四则运算，及下文（4.6 节见下方）指定的运算函数）
2、单元格格式信息
3、单元格左中右对齐
4、文字横排、竖排
5、单元格背景色、是否显示边框
6、单元格字体是否使用粗体

5.3	报表标注
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
仅靠向Excel单元格中填写内容，不足以定义一张报表所需的所有信息，为弥补此项不足，我们通过在相关单元格上添加标注来附加更丰富的信息。

5.3.1	标注标题
...........................
在作为标题的单元格上做如下标注：
isTitle：true
 .. image :: _static/images/bicenter_dev/5.3.1.1.png

 5.3.2	标注副标题
........................
在作为副标题单元格上做如下标注：
isSubtitle：true

5.3.3	标注表格左上表头（TopLeft）
................................................
左上表头用于标记一个表格区的左上角。
表头结构信息定义了表格的如下内容：
列表头高度： colHeaderHeight ,可简写为col
行表头宽度： rowHeaderWidth,可简写为row

表头结构的完整示例如下::

     header: {
     col:2,             //列表头高度
     row:2            //行表头宽度
     }
	 
	 
5.3.4	标注右下单元格（RightBottom）
.......................................
标记一个表格区的右下角，比须定义，写法如下::


		{
	  bottomRight:""
		}
		
5.3.5	标注列表头最小宽度
......................................

在需要控制的列表头单元格中，添加标注::

		{
		minWidth:”Nem”
		}
		
表示N 个字符宽度，其中， N 为任意数字，可为小数。 

5.3.6	标注Href跳转
........................
为支持由一张报表向相关报表的跳转，可通过在触发跳转的单元格中做如下标注：
href: （条件表达式）url
其中，条件表达式支持如下逻辑操作符：=、!=、> 、 >=、  <、  <=， 如无条件可与括号一并省略不写。 
url字符串与条件表达式中，可引用报表上下文变量（$变量名）及查询结果（参见语法规范.查询结果引用）
例：href："RegularReport?type=T0_新旧卡号详细.xls &op=view&branch=$branch&day=$day&cltno=data!SEQ_NO&cltname=data!PAYER_NAME"


5.3.7	标注补录区域
............................
补录区域可通过两种方式标注。

5.3.7.1	左上表头标注补录区域（editableAreas）
''''''''''''''''''''''''''''''''''''''''''''''''''''
在左上表头中，定义补录区范围，具体做法是在header对象中，添加如下数组：
editableAreas：[单元格坐标或范围1, 单元格坐标或范围2, …]
其中，单元格坐标直接使用Excel的坐标语法，如：E1，A3等。单元格范围，则按左上角坐标：右下角坐标方式定义，如：E2:F9， 该范围包括了E2为左上角，F9为右下角的一个矩形区域。
例：
 .. image :: _static/images/bicenter_dev/5.3.7.1.1.png
 
 5.3.7.2	单元格标注可否补录（editable）
''''''''''''''''''''''''''''''''''''''''''''''''''''

可直接在需要补录的单元格上，添加标注：
editable：true

对于使用editableAreas定义的补录区域中，无需补录的单元格，则可将其标注为不能补录：
editable：false

5.3.8	打印控制
..............................

5.3.8.1	打印设置标签页
''''''''''''''''''''''''''''''''''''''''''''''''''''
通过打印设置标签页，我们可以定义报表的打印（导出到PDF）字体，纸张信息。详见本文“打印（导出至PDF）默认设置”部分。

5.3.8.2	打印列宽标注
''''''''''''''''''''''''''''''''''''''''''''''''''''
可通过在左上表头区标注，精确定义打印时报表各列的列宽。

printColWidths：“n单位，n单位，….”

其中，n为数值可为小数，目前支持三种单位和%：pt，cm，em。Pt表示一磅，cm表示厘米，em表示字宽，%表示占页宽的百分比。

规则：每个逗号分隔部分对应一列，在想要精确控制的列上填写指定的值，其余可不填，不填部分，系统会在剩余的页面宽度中平均分配列宽。可指定列宽为0，表示该列隐藏。

例： printColWidths:”,,2em,,10%,,,2.3cm”
上例的含义是：第三列占2个字宽，第五列占10%页宽，底8列占2.3厘米宽，其余各列平分剩下的页面宽度。

5.3.8.3	套打标注
''''''''''''''''''''''''''''''''''''''''''''''''''''
5.3.8.3.1	套打单元格
""""""""""""""""""""""""""""""""""""""""""""

套打只需指明要打印单元格的打印位置即可，标注如下：
print：“left，top, width, height”
其中：left，top表示打印位置的左上角点位坐标，单位可为：cm，pt，em；width，height为打印区域的宽和高，单位可为：cm，pt，em。

例：
 .. image :: _static/images/bicenter_dev/5.3.8.1.1.png
 
 从纸张左上角下移5cm，右移5cm，然后再长5cm，3个字符高的区域内打印“四川裕寰非融资性担保有限公司”。
 
5.3.8.3.2	套打行
"""""""""""""""""""""""""""
5.3.9	单位转换控制
.....................
在“查询条件”标签页中，我们定义了用法为“数据转换”的变量，用于单位转换。一旦设置了单位转换，系统将针对每一个单元格尽量进行单位转换，所谓“尽量”，是指将不仅将数值数据单元格，常规单元格中，仅由数字字符组成的字符串也将作为数值进行单位转换。那么，如何控制单位转换，使其不至于转换我们不希望做转换的单元格呢？有两种方式可完成这种控制：一是将单元格设置为文本格式，一是标注单元格。

5.3.9.1	将单元格标注为文本格式
''''''''''''''''''''''''''''''''''
使用Excel提供的功能，将目标单元格的格式置为“文本”。

5.3.9.2	标注无需转换的单元格noConvert
'''''''''''''''''''''''''''''''''''''''''''
向该单元格添加如下标注：
noConvert:true

5.3.10	标注斜线表头
.........................
复杂的中国式报表中，往往需要在单元格中画斜线，这可通过如下标注完成：
style:”topLeft2bottomRightLine”，
captioins:[“右上显示值”,”左下显示值”]

该标注指示系统在单元格中画由左上向右下角画一条直线，并将右上显示值、左下显示值分别放到相应位置。

5.3.11	标注单元格跨行合并
..................................
在扩展后需要合并的单元格中添加如下标注：
mergeRow:true

如图：
 .. image :: _static/images/bicenter_dev/5.3.11.1.png
 
除按标注单元格内容进行合并外， 还可按同行其它列的内容进行合并， 标注如下：
mergeRowBy: x

其中， x为一整数， 表示以当前单元格为基准， 相隔x列的单元格，负数表示向左数，正数表示向右数。 如图：
 .. image :: _static/images/bicenter_dev/5.3.11.2.png
 
5.3.12	标注取消表格外框线
................................
在左上表头header 对象中，增加下列属性：
hasBorder: false

例：
 .. image :: _static/images/bicenter_dev/5.3.12.1.png

5.3.13	单元格取值定义
...............................
5.3.13.1	清单型报表的单元格取值定义
'''''''''''''''''''''''''''''''''''''''''
使用EEL语法中“依赖SQL迭代上下文的数据引用”语法定义，如：
${ds.data.salary}   表示取名为 data 的查询，当前迭代行名为“salary” 的字段的值。

5.3.13.2	固定行列型报表的单元格取值定义
''''''''''''''''''''''''''''''''''''''''''''''''''
使用EEL语法中“上下文无关的数据引用”语法定义，如：
${ds.data[rowNo=1][user]}  表示：执行名为data的SQL查询后，在得到的结果集中，取字段rowNO 为 1 的那一行， 字段user的值

${ds.data[user=ds.query[manger]][salary]}  表示：执行名为data的SQL查询后，在得到的结果集中，取字段user 为 另一查询query中manager字段的值 的那一行， 字段salary的值

5.3.13.3	嵌入多个单元格
''''''''''''''''''''''''''''''''''''
当需将一个单元格插入多子单元格时，将单元格插入多个值，用逗号分隔。然后做如下标注::

		embed:{
		col:1,
		row:2
		}

上述标注表示，按1列2行排列单元格中的两个值。

例：
 .. image :: _static/images/bicenter_dev/5.3.13.3.1.png
 
5.3.13.4	混合文本单元格
''''''''''''''''''''''''''''''
参见“查询结果引用”部分

5.3.13.5	混合运算单元格
'''''''''''''''''''''''''''
当一个报表中存在多个查询，且不同结果集中需要运算时，使用如下语法：
${EEL运算表达式}
运算表达式语法：为包含“固定行列单元格取值定义”或“清单型单元格取值定义”的四则运算式。需要注意的是，“固定行列单元格取值定义”或“清单型单元格取值定义”需用{}号括起来。例：
${ ds.data[corp] – ds.lastMonth[branch=ds.data[branch]][corp] }
其中：ds.data[corp] 为 清单型单元格取值定义
ds.lastMonth[branch=ds.data[branch]][corp] 为 固定行列单元格取值定义

5.3.13.6	特殊单元格
'''''''''''''''''''''''''''
5.3.13.6.1	人民币格式
"""""""""""""""""""""""""""""""
人民币中文大写,做如下标注::

	 money:{
		format:”chineseNumber”
     }

人民币金额网格,做如下标注::

		money:{
		format:”grid”
		}

5.3.14	标注多个章节
............................
当一个报表内包含多个表格时，可将其分解为多个章节。
每个章节在开始的第一个单元格用如下标注标明：
section：章节序号

其中，章节序号为以1为基的自然数。

5.3.15	标注按行扩展的单元格
..............................
一些报表，尤其是一些凭证，它们常常将查询结果集的一行数据自由布局，然后根据查询结果集的行数，向下扩展，针对这种类型的报表，我们需要按下述规则标注。

示例::

		sqls:[
      {
        name:"data",
        expand:{
          dir:"row",
          range:"B2:H10",
          lineBreak:true
        }
      }
	]

其中，expand域定义于扩展相关的信息。
dir 表示扩展方向，目前只支持按行扩展，所以其值只能为“row”。
range表示按行扩展的基本单元，其值为左上单元格坐标:右下单元格坐标定义的一个矩形区域。
breakLine表示扩展单元间是否需要分隔，true表示需要分隔，false或不定义此域表示无需分隔。

另，一个实际例子：
 .. image :: _static/images/bicenter_dev/5.3.15.1.1.png
 
5.3.16	标注分组、汇总
.......................
分组，是指显示查询结果集时，将指定字段取值相同的数据行组织在一起，并可针对这些数据行进行聚合运算（如，求和、计数等）的一种数据组织方式。
使用分组技术，需分别定义分组、标注分组头、标注分组尾，并在相应单元格中，使用分组聚合函数。
breakLine： 可选，其值为“page”时，表示打印时，在该分组边界需强制分页；屏幕显示时，可显示多个分组，但只能在最后一个分组的边界分页。

5.3.16.1	标注分组汇总行
'''''''''''''''''''''''''''''
在行首的单元格标注：
bindTo: “group.dsName” 
[dsName] 为定义了分组的查询名称.
该标注指定： 查询结果中，每出现一个新的分组，该行都应相应出现，出现的位置，则依照表样中定义的相对位置。
需要注意的是， bindTo 的参数还可以是数据行，如：
bindTo: “ds.dsName”
这表示：查询结果中，每出现一个新的数据行，该行都应相应出现，出现的位置，则依照表样中定义的相对位置。

5.3.16.2	分组聚合函数
'''''''''''''''''''''''''''
 .. image :: _static/images/bicenter_dev/5.3.16.1.png
 注： [dsName] 为定义了分组的查询名称
其中，上下文敏感的函数，是指根据其出现位置的不同，会得到不同结果的函数，如：当分组求和函数出现在分组尾时，得到的是该分组所有行的和；当其出现在查询语句所在行时，其结果是从第一行到当前行的和；当其出现在表头时，得到的是第一行的值。其它上下文敏感函数的行为也是同样的。

5.3.17	通过标注，隐藏指定列
...............................

如下图，可在列表头区中，相应单元格中标注：
hideIf：EEL条件表达式
 .. image :: _static/images/bicenter_dev/5.3.17.1.png

 注： 该标注须定义于列表头单元格中， 即，列表头高度须标注为大于0（参见：5.3.3），否则，将被视为没有列表头。
 
5.4	标注行背景色
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
在该行第一个单元格中，做如下标注：
rowBackgroundColor:”颜色码或颜色名称”
颜色码或名称支持Web颜色命名规范，如：red, #FF0000 等。

5.5	清单型报表交替背景色定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
有两种方法，第一种，直接标注：
otherBackgroundColors:”颜色码或颜色名称” 
推荐使用第一种方法，第二种方法仅为兼容考虑：
在相应的行上，将报表最后一列相邻的右边一个单元格，着上用于交替的背景色。如图：
 .. image :: _static/images/bicenter_dev/5.5.1.png
 
 同时，在该行第一个单元格中，做如下标注：
otherBackgroundColors:1
例如：
 .. image :: _static/images/bicenter_dev/5.5.2.png
 
5.6	数据集聚合函数
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
除分组聚合外，BI-Center还支持对整个查询结果集的某个字段进行聚合运算。支持的函数列表如下：
 .. image :: _static/images/bicenter_dev/5.6.1.png
注：dsName 为查询名称

5.7	支持的Excel运算函数
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
BI-Center支持如下Excel单元格函数：
IF， ROUND，MAX, MIN 形如SUM（A1：A3）的SUM函数（注， SUM（A1,A2,A3）这种形式不支持）。

5.8	其它全局函数及变量
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
BI-Center提供了在报表上下文中可用的全局变量及函数，列表如下：
 .. image :: _static/images/bicenter_dev/5.8.1.png
例：
取查询条件day代表的时间粒度的第一天的显示值： 
${dcFirstDay(var.day,"yyyy年MM月dd日")}

取前年12月的显示值：
${dcConvertDate(var.day,"-2y","yyyy年12月")}

6	表样文件编译及打包
--------------------------
表样打包的意思是可以把我们的表样分成多个部分存放在不同的目录下，只要写明路径就可以。
一．首先进入应用包目录的lib文件夹下。
例:
D:\ruanjiananzhuang\Tomcat 6.0\webapps\bicenterfin5\WEB-INF\lib>

二．目前有四个可用的命令
1 , 表样编译：是把以前存放目录下的表样全部预先编译一次，这样在界面上打开报表时所花的解析表样时间更短。注意会自动为每个表样生成一个后缀为obj的文件。
说明：
     compile all report template files under a file folder:
     java -jar bicenter.jar -compile full-path-of-the-folder
例：
D:\ruanjiananzhuang\Tomcat 6.0\webapps\bicenterfin5\WEB-INF\lib>java -jar bicenter.jar -compile D:\FMT\rptdef5\tmpls

2 ,打包：是把某目录下的表样全部打包，变为一个文件，形成表样库，以便有多个表样库可以同时使用。注意后缀为brp。
说明：
    put all report template files under a file folder into a package:
    java -jar bicenter.jar -pack full-path-of-the-folder the-package-name
例：
D:\ruanjiananzhuang\Tomcat 6.0\webapps\bicenterfin5\WEB-INF\lib>java -jar bicenter.jar -pack D:\FMT\rptdef5\tmpls D:\FMT\demo.brp

3 ,包反编译为文件：把包内的文件解压出来，以便修改表样。
说明：
    unpack all report template files from a package into a file folder:
    java -jar bicenter.jar -unpack the-package-name full-path-of-the-folder
例：
D:\ruanjiananzhuang\Tomcat 6.0\webapps\bicenterfin5\WEB-INF\lib>java -jar bicenter.jar -unpack D:\FMT\demo.brp D:\FMT\tmpls1

4 , 把原来的包重新打一次：也许发版本后需要把原来的包重新打包一次。
说明：
     repack all report template files in a package into a new package:
     java -jar bicenter.jar -repack the-source-package-name the-new-package-name
例：
D:\ruanjiananzhuang\Tomcat 6.0\webapps\bicenterfin5\WEB-INF\lib>java -jar bicenter.jar -repack D:\FMT\demo.brp d:\demo.brp

为了提高报表初次访问的相应速度， 可以对相应表样目录下的文件进行编译。

7	SQL查询语句定义
--------------------------
Sql查询的定义，在表样文件中“查询条件”标签页中进行。
 .. image :: _static/images/bicenter_dev/7.1.png
 
 如上图，查询定义填写查询名称、数据源、选择参数、用法、查询定义、分组字段 五列。其中选择参数可按需选填，其它则必须填写。
 
7.1	查询名称
~~~~~~~~~~~~~~~~~~~~~~~~~~~
每个查询须定义一个不重复的名称。以便报表的其它部分对其进行引用。

7.2	数据源名称
~~~~~~~~~~~~~~~~~~~~~~~~~~~
查询语句使用数据源的名称，在此处定义。数据源名称须与配置文件jdbcDomain.properties中数据库连接的设置保持一致。

7.3	用法
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sql查询语句可有如下用法：“数据查询”、“前置处理”。

用于“数据查询”的SQL语句用于从数据库中提取数据，填写到报表中.

“前置处理”须在所有查询发生之前率先进行查询，它通常用于执行一个或多个存储过程，其书写语法如下：
{ call 存储过程名称(参数1，参数2，…)  }
例：
{call SYMBOLS.TP_AM_REPORT.TP_AM_SUBJECT_LIMIT ( '$branch', '$subcode', '$userid' )}

7.4	选择参数
~~~~~~~~~~~~~~~~~~~~~~~~~~~

“选择参数”的定义，使得我们可以在同一查询名称下，根据选择变量条件的不同，定义多个SQL语句和（或）数据源。执行时，根据某个变量的取值，来决定使用不同的SQL语句和（或）数据源进行查询。

选择变量支持任何合法的EEL 布尔表达式。


7.5	SQL语句
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sql语句可以通过以下方式引用变量：
其一，以 ${var.变量名} 或 任何合法的 EEL表达式 来引用查询条件中定义的变量，使用这种方式时，系统按字符串替换的方式为其赋值，因此需根据其不同的数据类型，由用户在填写SQL语句时决定是否需加单引号等。

7.6	分组字段
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Bicenter支持两种方式制作带有分组小计的明细报表：
1、	分组小计值通过Sql查询获得，与明细项查询一起，通过多个查询结果集的组合，达到最终效果。
2、	使用一个排了序的明细项SQL查询，通过对相同的分组项做聚合运算，达到最终效果。

 	“分组字段”用于分组第二种情况，它定义了用于分组的字段名，如果用于分组的字段多于一个，则用“，”号分隔。 要确保SQL查询中已针对这些字段排了序。

8	引用报表定义
----------------------
如下图：
 .. image :: _static/images/bicenter_dev/8.1.png

“报表名称”项用于定义表样的文件名。
“报表参数”项用于为访问该报表提供查询条件，该项内容将作为URL字串的一部分，用于查询报表数据，因此，语法为：
key1=value1&key2=value2&…
注意，如果引用表的某参数的参数名与取值与当前报表一致，则可省略
“引用名称”项用于在表样中使用，格式如下：${ref.ref.C5}，其中C5是引用单元格的坐标。

9	报表及补录数据存储定义
--------------------------------

当报表及补录数据需要保存到数据库中时，需定义报表参数与数据库中表的字段的对应关系。
如下图所示，我们需要指定用于存储补录数据的表及数据源。同时，我们还指明了报表变量对应的字段，以及相应的数据类型。
下图中，数据序号、格式、说明列可不填写，其余均为必填。
当报表无补录需求时，可不填写该标签页。
 .. image :: _static/images/bicenter_dev/9.1.png

 
10	数据回写定义
------------------------------
数据回写定义在“回写设置”标签页中定义，标签模板如下图：
 .. image :: _static/images/bicenter_dev/10.1.png
 
 该模板用于定义数据库字段与报表列的映射关系。数据源和数据库表名在标签页开头填写，注意“数据源”、“回写表名”两个标签单元格内容不能改动。

数据回写操作将当前报表除列表头外的每一行，映射为回写数据表中的一条数据行。当前报表的若干列，对应到数据表中的相应列，列映射的具体方法如下：

“字段名”列填写回写表的字段名
“数据类型”填写字段的类型

“映射类型”列填写与字段对应的报表列的类型，映射类型分为三种：报表变量，报表列名，常量。
“映射内容”列根据“映射类型”的值来填写相应内容：
如果“映射类型”的值为：“报表变量”，则以 $变量名 的方式应用查询条件中定义的变量值；
如果“映射类型”的值为：“报表列名”，则填写Excel中的列坐标，如：A（第一列） 、 B（第二列） 等
如果“映射类型”的值为：“常量”，则填写要直接写入数据表的值。

“用法”列用于定义回写中各字段的作用，它有三种选择：删除条件、数据字段、辅助字段。当字段用于“删除条件”时，将作为组合字段筛选出对应于该报表的一批历史数据，当进行报表回写操作时，首先将根据“删除条件”的定义，删除历史数据，然后再将当前报表数据插入。当字段用于“数据字段”时，回写操作会判断当前报表的某一行中是否所有数据字段都为空，如果为空，则不回写记录。当字段即不作为“删除条件”，也不用作“数据字段”时，则应填写为“辅助字段”。

11	统计图定义
------------------------
统计图通过标签页“chart”定义。 如下图所示：
 .. image :: _static/images/bicenter_dev/11.1.png
 
名称：用于定义统计图的名称
标题：显示在统计图上的标题，标题中可包含 全局变量及函数
作图引擎：保留项，可不填
类型：定义统计图的类型，目前支持柱图、条型图、线图、饼图及散点图
色系：定义统计图使用的颜色系列
数据序列名称： 定义数据序列的名称， 一个数据序列对应报表数据的一列（或几列），当一幅图中包含多个数据序列时，用“，”分隔，如：序列1，序列2，序列3……
数据序列所在的列或行：指定数据序列对应的报表数据列，使用Excell列坐标（大写字母）表示，多个数据序列使用“，”分隔。一些类型的统计图（如散点图），一个数据序列需要多个值，这时，使用“|”分隔。 如： A|B， C|D， 表示统计图显示两个序列，一个序列的横坐标数据来源于数据列A，纵坐标数据来源于数据列B；另一个横坐标数据来源于数据列C，纵坐标数据来源于数据列D
数据点名称：  指定数据序列中每个数据点的名称所在数据列。对于柱图、线图，数据点的名称即为横坐标的值， 对于饼图，数据点名称则对应每个分瓣的名称。
横坐标轴说明：定义横坐标名称。
纵坐标轴说明：定义纵坐标名称。

12	打印（导出至PDF）默认设置
--------------------------------
如下图，通过打印设置标签页，我们可以定义报表的打印（导出到PDF）字体，纸张信息。

“打印规格”中定义的纸张类型，将作为PDF的每页画布大小。同时，也是打印对话框中的默认纸张。

如果该报表需要套打，则需要将“打印规格”选为套打，同时，填写“套打纸张”。套打纸张”用于定义套打纸张的宽和高，第一列为宽，第二列为高。宽和高的单位必须是下列之一：cm（厘米）、mm（毫米）、in（英寸）。

注意：
1、若要定义套打，除在此处定义将“打印规则”选为“套打”外，还需在表样定义时，作相应的标注，详见“表样定义/报表标注/打印控制/套打标注”部分。

2、即使在“打印规格”中指定为“套打”，在打印时也可使用标准纸张进行常规打印，只需在打印对话框中，将纸张选择为除套打外的其它类型纸张即可。
 .. image :: _static/images/bicenter_dev/12.1.png
 
如无打印需求，可以不填该标签页。

13	其它设置
--------------------------
该标签页为用户提供配置项，用以控制报表的外观和行为。如下图：
 .. image :: _static/images/bicenter_dev/13.1.1.png

13.1	报表显示宽度控制策略
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
当设为：“适应屏幕宽度”时， 即使报表内容宽度小于屏幕宽度， 报表向某些列填充空白，使其宽度等于屏幕宽度；选择适应内容时，如果内容宽度小于屏幕宽度时，将以屏幕宽度的80%宽度作为报表宽度。

13.2	查询操作时自动清除缓存
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
选择“是”时，报表的“查询”按钮与“刷新”按钮等效。
该设置为“是”时，对报表系统的性能及稳定性有一定影响，请谨慎配置。须确保：1、无并发操作；2、查询较轻。

13.3	无值单元格填充值
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
该设置用于指定固定行列型报表中，单元格定义的值不存在时，使用何值替代。不填值表示该单元格为空白。

14	报表中的数据权限
----------------------

报表中的数据权限，包含两个方面的含义，第一个方面，是指不同的用户，访问同一份报表，根据权限的不同，看到的是不同的汇总数据，如：某集团公司的某报表包含一个显示“总利润”的单元格，总部的用户看到的是整个集团的利润汇总，而分公司的用户看到的则只是该分公司的利润汇总。第二个方面，则是指报表中个别单元格含有敏感信息，只允许有足够权限的人看。如：某公司的员工信息表中，含有一个显示员工工资的单元格，该单元只允许公司领导及本人查看。
针对第一个方面的问题， Freereport 可将用户信息作为查询条件，通过滤除无权访问的数据，在数据库层面解决。
针对第二个方面的问题， 则需要许多技术手段协作完成。这些技术手段包括：
配置用户ID获取方法
配置权限敏感维度
配置用户自定义用户信息类
表样定义中，对敏感单元格增加权限标注
通过权限设置页面设置单元格的访问规则
编写自定义的访问用户信息的Java类

14.1	配置当前用户信息获取方法
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
需定义如下两个配置项：
userid.pass.method ： 可为 request、session， request 指从http请求参数中取，session表示从http session变量中取。
userid.pass.key： 指用户ID的 http请求参数名或session属性名
username.pass.key: 指用户显示名的 http请求参数名或session属性名，可省略
例：用户通过url: http://localhost/bicenterfin/report?type=xxx&uid=liuxjg
配置如下：
userid.pass.method=request
userid.pass.key=uid

则该配置指示程序从http request中取参数uid的值“liuxjg“作为用户ID。

有的情况下，应用程序使用session中的一个javaBean来存储用户信息，这就需要配置javaBean的信息：
userid.session.bean=java类全名
userid.session.bean.id.method=获取用户Id的方法名， 如：getId()
userid.session.bean.name.method=获取用户显示名称的方法名， 如：getName()

14.2	配置权限敏感维度
~~~~~~~~~~~~~~~~~~~~~~~~~~~
通常，权限敏感维度是一个层次结构，用户属于该层次结构上的一个（或几个）成员，用户访问特定数据的权限，往往跟在该层次机构上的位置有关。典型的例子如组织机构。
层次信息通常存储在业务数据库的相应表中，存储层次机构的表通常有两种设计范式，一种为“父子关系（自相关）表”，一种为 “上级字段冗余表”。

14.2.1	配置维度-父子关系（自相关）表
.......................................

父子关系（自相关）表的示例如下：
 .. image :: _static/images/bicenter_dev/14.2.1.1.png

 该表结构的主要特征是：每条数据库记录中，包含一个指定其上级机构的ID，如果该机构是顶层机构（没有上级机构），则其上级机构ID则置为空或一个约定的值如：-1,0 等。

父子关系（自相关）表的配置项如下::

维度名称.hierarchy.datasource=foodmart  //包含该表的数据源名称
维度名称.hierarchy.store.type=parent.children.table  //该表的存储类型为父子关系（自相关）表
维度名称.hierarchy.table.name=机构表 //表名
维度名称.hierarchy.cache.durance=1H //缓存时长
维度名称.hierarchy.access.control=yes 
维度名称.hierarchy.level.name=总公司,分公司,办事处//各层级名称，由高至低，逗号分隔
维度名称.hierarchy.child.id=机构_id  //存储本级ID的字段名称
维度名称.hierarchy.child.name=机构名称 //存储本级名称的字段名称
维度名称.hierarchy.caption.pattern={id} - {name}  //显示本级机构时的字符串模式
维度名称.hierarchy.parent.id=上级机构_id  //存储上级ID的字段
维度名称.hierarchy.parent.id.null.val=null  //顶层机构的上级ID的值

14.2.2	配置维度-上级字段冗余表
.......................................

上级字段冗余表的示例如下：
 .. image :: _static/images/bicenter_dev/14.2.1.2.png
 
 该类表的主要特征是：每条记录都将所有上下级关系存在相应的字段中。显而易见，该表结构中，所有非底层的字段都是有冗余的。

上级字段冗余表的配置如下：
维度名称.hierarchy.datasource=foodmart //包含该表的数据源名称
维度名称.hierarchy.store.type=flat.table //该表的存储类型为“上级字段冗余表”
维度名称.hierarchy.cache.durance=1H  //缓存时长
维度名称.hierarchy.table.name=机构表 //表名
维度名称.hierarchy.access.control=yes
#yes no 
维度名称.hierarchy.level.name=总公司,分公司,办事处//各层级名称，由高至低，逗号分隔
维度名称.hierarchy.level.member.id=总公司_id, 分公司_id, 办事处_id  //存储各层次id的字段，由高至低，逗号分隔
维度名称.hierarchy.level.member.name=总公司_name, 分公司_name, 办事处名称//存储各层次名称的字段，由高至低，逗号分隔

14.2.3	配置权限敏感维度
..............................
权限敏感维度配置项如下：
access.controll.hierarchy=region, employee
等号右边是权限敏感的维度名称集合，用逗号分隔。

14.3	配置用户自定义用户信息类
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
access.controller.userInfoProvider=com.dc.bicenter.frontend.report.freereport.UserInfoProviderImpl

自定义用户信息类由用户根据各自权限系统的实现自行编制，该类必须实现接口: com.dc.bicenter.frontend.report.freereport.IUserInfoProvider
该接口实现如下三个方法：
String[] getAllRoles(); //获取系统内所有的角色
String[] getUserRoles(String uid); //获取用户所属的角色
String[] getUserBindingMembers(String uid, String hierName); //获取用户在维度上所属的成员， 如：用户 “001” 属于 “机构” 维度的 “成都分公司”， 则该方法应返回一个仅包含“成都分公司”ID的字符串集合。

14.4	标注权限敏感单元格
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
如下图： accessControl的值，作为该单元格的标识，在一个报表内不允许重复。
 .. image :: _static/images/bicenter_dev/14.4.1.png
 
15	套表定义
------------------
套表定义本身，就是按固定模板填制内容的行列固定型报表。它用“套表目录”标签页取代普通报表的“define”标签页，同时，它增加了一个“校验规则”标签用于定义表内表间平衡的运算公式。

15.1	套表目录定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
下图是“套表目录”标签示例：
 .. image :: _static/images/bicenter_dev/15.1.1.png
 
 其中，报表标题标注，左上、右下单元格标注，都通其它报表一样，不同的是，列名不能删除及修改。套表目录的每一行代表一个报表目录项，一个报表目录项须包含“报表名称”、“参数”，“报表别名”三项。
“报表别名”项用于定义平衡校验规则时引用相应报表，因此不能重名。
“参数”项用于为访问该报表提供查询条件，该项内容将作为URL字串的一部分，用于查询报表数据，因此，语法为：
key1=value1&key2=value2&…
注意，由于套表也可以定义自己的查询条件，所以，如果该报表查询条件中的变量名与套表的相同，则可以不用填写，系统自动使用套表提供的查询条件。参数中必须填写的条件是type，它的值为表样的文件名。如果在Fintelligen中使用，还必须填写S_ID，其值必须与在Fintelligen中注册报表中定义的“报表编号”一致。
如果该报表查询条件中的变量名与套表的相同，但取值不同，也必须将其填写在“参数”列中，取值部分支持如下运算语法：
${  BI-Center支持的运算公式 }

15.2	平衡校验规则定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
下图是“”标签示例：
 .. image :: _static/images/bicenter_dev/15.2.1.png
其中，列名不能删除及修改。每个校验规则占用一行，使用“套表目录”中的别名和Excel单元格坐标来唯一指定报表中的单元格，语法如下:
报表别名!单元格坐标， 例： SC1024!C5。

16	内置函数参考
----------------------
16.1	条件分支函数
~~~~~~~~~~~~~~~~~~~~~~~~~
If（boolean，val1，val2）
如果布尔表达式 boolean 为真，则返回val1,否则返回 val2。 
与 Excel 兼容

16.2	数值计算函数
~~~~~~~~~~~~~~~~~~~~~~~~~~
Min（val1，val2）返回val1、val2 中较小的值与 Excel 兼容
Max（val1，val2）返回val1、val2 中较大的值与 Excel 兼容
Round(val1, precise)返回 val1 小数点后保留  precise 位的值与Excel 兼容
Sum（A1：B3）返回 表格中 A1 至 B3 之间单元格的和， 与Excel 兼容

16.3	字符串处理函数
~~~~~~~~~~~~~~~~~~~~~~~~
Format(val, formateStr)
Val： 可为日期、数值以及“，”号分隔的字符串序列
formatStr: 对于日期， 可以使用日期格式字串， 如：yyyy 表示年 MM表示月 dd表示日 HH表示24小时制的小时 mm 表示分 ss表示秒
对于数值，使用形如“###.00”的模式 #:表示有数字则输出数字，没有则空，如果输出位数多于＃的位数，
             则超长输入
          0:有数字则输出数字，没有补0
             对于小数，有几个＃或0，就保留几位的小数；
          例如： "###.00" -->表示输出的数值保留两位小数，不足两位的
                             补0，多于两位的四舍五入
                 "###.0#" -->表示输出的数值可以保留一位或两位小数；
                                  整数显示为有一位小数，一位或两位小数
                                  的按原样显示，多于两位的四舍五入；
                 "###" --->表示为整数，小数部分四舍五入
                 ".###" -->12.234显示为.234
                 "#,###.0#" -->表示整数每隔3位加一个"，";

对于“，”号分隔的字符串序列，使用如下的格式字符串定义格式：
“左字符串*右字符串|分隔字符串”
其中， “*”号为占位符， 左、右及分隔字符串由用户定义，
例： 对于字符串序列“1， 2， 3” 则：
如格式串为： ‘*’|，   则值变量为：‘1’，‘2’，‘3’
如格式串为： （*）|；   则值变量为：（1）；（2）；（3）

Len（str）

返回字符串 str 的长度

Remove（str1， str2）

从str1 中 删除 与 str2 相同的子字符串

Contains（str1,str2）
Contains（str1,str2, caseSensitive）

Str1 是以“，”号分隔的字符串子字符串序列， 如果其子字符串中包含str2 , 则返回 true， 否则， 返回flase 。

caseSensitive 为true 表示大小写敏感， 可省略该参数，省略时，以大小写不敏感的方式匹配字符串


grep（str, regPattern）

返回字符串str中，符合正则表达式 regPattern 的子字串

isMatch（str， regPattern）

str 是否符合正则表达式 regPattern

isBlank（str）

str 是否为空字串

16.4	日期计算函数
~~~~~~~~~~~~~~~~~~~~~~~~~~
caclDate（date, years,months,days,hours,minutes,seconds）
caclDate (date,  offsetStr )

计算日期，返回date 加上时间偏移量的值。
Years ： 年偏移量
Months： 月偏移量
Days： 日偏移量
Hours： 小时偏移量
Minutes ： 分偏移量
Seconds： 秒偏移量

OffsetStr：偏移量字符串　形如：　“[+|-] n [d|t|m|q|s|y]” )}
其中， 
+表示当前时间加，-表示当前时间减。
n 为数值。
d表示天，t表示旬，m表示月，q表示季，s表示半年，y表示年。

例： “-1d” 表示当前时间上一天， “-1t”表示上一旬， “-3m”表示三个月前……

toDate（str， formatStr）
将字符串str 转换为日期， str的格式由formatStr指定，如：toDate（“2012年07月01日”，“yyyy年MM月dd 日”）

today()
返回当前时间

today(offsetStr)
返回当前时间加上偏移量， offsetStr  用法 参加calcDate 函数的描述

rundate()
返回数据更新时间

rundate(offsetStr)

返回数据更新时间加上偏移量， offsetStr  用法 参加calcDate 函数的描述

dcFirstDay(dateCode, formatStr)
取按神码日期编码字符串所表达日期的第一天。 

FormatStr： 日期格式串
DatCode： 神码日期编码字符串， 神码日期编码为固定格式的字符串，用于表达时间段，其编码方式见下表：
 .. image :: _static/images/bicenter_dev/16.4.1.png
dcLastDay(dateCode, formatStr)

取按神码日期编码字符串所表达日期的最后一天。

dateDiff（datePart，startDate, endDate）
返回起始时间 startDate 与 截止时间 endDate 之间的时间跨度， 该跨度的世界单位由datePart定义， datePart 为字符串， 目前仅支持 “d”, 表示天。

17	URL 功能调用详解
-------------------------
17.1	查看报表
~~~~~~~~~~~~~~~~~~~~~~~
有下列几种方式：

1、	显示录入条件区，报表内容空白， 点击查询后显示报表内容：
http://服务器及端口/bicenterfin/ RegularReport?_type=表样文件名

2、	显示录入条件区， 并直接显示按缺省条件值查询出的报表内容
http://服务器及端口/bicenterfin/RegularReport?_type=表样文件名&_aal=queryreport

3、不显示录入条件区， 直接显示报表内容
http://服务器及端口/bicenterfin/ RegularReport?_type=表样文件名&报表参数1=值&&报表参数2=值...&op=view
或
http://服务器及端口/bicenterfin/RegularReport?_type=表样文件名&_aal=queryreport&_hi=true


17.2	套表平衡校验
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
http://服务器及端口/bicenterfin/RegularReport?_type=表样文件名&_aal=validate

17.3	按钮显示控制
~~~~~~~~~~~~~~~~~~~~~~~~~
配置如何获得控制命令
button.control.method=session   //通过httpSession传命令，也可定义为request,表示通过HttpRequest传命令，如不设置，缺省值为“request”
button.control.key=hide         //session或request中的变量名，如不配置缺省值为“hide”

控制命令的写法
将要隐藏按钮的Html元素的id属性罗列出来，用半角逗号分隔。按钮的id可通过查看html源文件获得。

当配置为通过request控制时，使用如下写法：
http://服务器及端口/bicenterfin/RegularReport?_type=表样文件名&hide=button1,button2

17.4	条件区显示控制
~~~~~~~~~~~~~~~~~~~~~~~~~~
http://服务器及端口/bicenterfin/RegularReport?_type=表样文件名&hideTop=true

17.5	查看统计图
~~~~~~~~~~~~~~~~~~~
http://服务器及端口/bicenterfin/Chart?_type=表样文件名

17.6	查看license信息
~~~~~~~~~~~~~~~~~~~~~~~~~~~
http://服务器及端口/bicenterfin/ RegularReport?op=license


















